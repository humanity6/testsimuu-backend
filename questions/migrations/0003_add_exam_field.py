# Generated by Django 5.2.1 on 2025-05-14 16:13

from django.db import migrations, models
import django.db.models.deletion


def set_default_exam(apps, schema_editor):
    """
    Set the default exam for all existing questions based on their topic.
    If no default exam exists, create one.
    """
    Exam = apps.get_model('exams', 'Exam')
    Question = apps.get_model('questions', 'Question')
    
    # Get default exam or create one
    default_exam, created = Exam.objects.get_or_create(
        name='Default Exam',
        defaults={
            'slug': 'default-exam',
            'description': 'Default exam for migrating existing questions',
            'is_active': True
        }
    )
    
    # Update all questions to use the default exam
    Question.objects.all().update(exam=default_exam)


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0001_initial'),
        ('questions', '0002_initial'),
    ]

    operations = [
        # Add exam field (nullable at first for the migration)
        migrations.AddField(
            model_name='question',
            name='exam',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='questions',
                to='exams.exam',
                help_text="The most specific exam/category/subject this question belongs to."
            ),
        ),
        
        # Run data migration to set default exam
        migrations.RunPython(set_default_exam, migrations.RunPython.noop),
        
        # Make exam field required (not nullable)
        migrations.AlterField(
            model_name='question',
            name='exam',
            field=models.ForeignKey(
                db_index=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='questions',
                to='exams.exam',
                help_text="The most specific exam/category/subject this question belongs to."
            ),
        ),
        
        # Make topic field nullable
        migrations.AlterField(
            model_name='question',
            name='topic',
            field=models.ForeignKey(
                blank=True,
                help_text="Optional secondary categorization within an exam.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='questions',
                to='questions.topic'
            ),
        ),
        
        # Update indexes
        migrations.RemoveIndex(
            model_name='question',
            name='questions_q_topic_i_03c5ed_idx',
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['exam', 'topic', 'question_type', 'difficulty', 'is_active'], name='questions_q_exam_id_a4b3e5_idx'),
        ),
    ]
